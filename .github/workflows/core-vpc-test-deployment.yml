---
name: core-vpc-test-deployment

on: 
  push:
    branches:
      - main
    paths:
        - 'environments-networks/*-test.json'
        - 'scripts/tests/validate/fixtures/pre-terraform-core-vpc-validation.json'
        - 'terraform/environments/core-vpc/**'
  pull_request:
    branches:
      - main
    paths:
        - 'environments-networks/*-test.json'
        - 'scripts/tests/validate/fixtures/pre-terraform-core-vpc-validation.json'
        - 'terraform/environments/core-vpc/**'
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_IN_AUTOMATION: true
  TF_ENV: "test"

defaults:
  run:
    shell: bash

jobs:
  core-vpc-test-deployment-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 0.14.4
          terraform_wrapper: false
 
      - name: Run core-vpc terraform plan
        run: |
          # Test if this is a PR or PULL event

          #USE IF RUNNING IN GITHUB ACTIONS
          if [ ! -z ${{ github.event.pull_request.number }} ]
          then

          #USE IF USING ACT
          # if [ ! -z ${PULL_REQUEST_NUMBER} ]
          # then

          #CONFIGURE TERRAFORM AND WORKSPACE
          bash scripts/terraform-init.sh terraform/environments/core-vpc
          terraform -chdir="terraform/environments/core-vpc" workspace select "core-vpc-${TF_ENV}"

          #RUN TERRAFORM PLAN
          PLAN=`bash scripts/terraform-plan.sh terraform/environments/core-vpc | tee /dev/stderr | grep '^Plan: \|^No changes.'`
          PLAN="> TERRAFORM PLAN RESULT
          ${PLAN}"
          bash scripts/update-pr-comments.sh "${PLAN}"
          fi
        env:
          SECRET: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}
          PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}

  core-vpc-test-deployment-apply:
    runs-on: ubuntu-latest
    if: github.event.ref == 'refs/heads/main'
    needs: [core-vpc-deployment-plan]
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 0.14.4
          terraform_wrapper: false

      - name: Run Terraform apply in terraform/environments/core-vpc
        run: |
          bash scripts/terraform-init.sh terraform/environments/core-vpc
          terraform -chdir="terraform/environments/core-vpc" workspace select "core-vpc-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/core-vpc
          echo "Terraform apply finished"